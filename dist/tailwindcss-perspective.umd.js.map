{"version":3,"file":"tailwindcss-perspective.umd.js","sources":["../src/index.js"],"sourcesContent":["const map = require('lodash.map')\r\nconst plugin = require('tailwindcss/plugin')\r\n\r\nconst perspectivePlugin = plugin(function ({ config, addUtilities, addBase, theme, e }) {\r\n\r\n    if (config('mode') == 'jit') {\r\n        addBase({\r\n            '*, ::before, ::after': {\r\n                '--tw-translate-x': '0',\r\n                '--tw-translate-y': '0',\r\n                '--tw-translate-z': '0',\r\n                '--tw-rotate-x': '0',\r\n                '--tw-rotate-y': '0',\r\n                '--tw-rotate-z': '0',\r\n                '--tw-skew-x': '0',\r\n                '--tw-skew-y': '0',\r\n                '--tw-scale-x': '1',\r\n                '--tw-scale-y': '1',\r\n                '--tw-scale-z': '1',\r\n                // '--tw-self-perspective': '0',\r\n                '--tw-transform': [\r\n                    'translateX(var(--tw-translate-x))',\r\n                    'translateY(var(--tw-translate-y))',\r\n                    'rotateX(var(--tw-rotate-x)) rotateY(var(--tw-rotate-y)) rotateZ(var(--tw-rotate-z))',\r\n                    'translateZ(var(--tw-translate-z))',\r\n                    // var(--tw-translate-x), var(--tw-translate-y), var(--tw-translate-z)\r\n                    'skewX(var(--tw-skew-x))',\r\n                    'skewY(var(--tw-skew-y))',\r\n                    'scale3d(var(--tw-scale-x), var(--tw-scale-y), var(--tw-scale-z))',\r\n                ].join(' '),\r\n            }\r\n        })\r\n\r\n        addUtilities({\r\n            '.transform-style-flat': {\r\n                'transform-style': 'flat'\r\n            },\r\n            '.transform-style-3d': {\r\n                'transform-style': 'preserve-3d'\r\n            },\r\n        })\r\n\r\n        addUtilities({\r\n            '.backface-visible': {\r\n                'backface-visibility': 'visible'\r\n            },\r\n            '.backface-hidden': {\r\n                'backface-visibility': 'hidden'\r\n            },\r\n        })\r\n\r\n        const perspectiveOriginUtilities = map(theme('transformOrigin'), (value, key) => {\r\n            return {\r\n                [`.${e(`perspective-origin-${key}`)}`]: {\r\n                    'perspective-origin': value\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(perspectiveOriginUtilities)\r\n\r\n        const perspectiveUtilities = map(theme('perspectiveValues'), (value, key) => {\r\n            return {\r\n                [`.${e(`perspective-${key}`)}`]: {\r\n                    'perspective': value\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(perspectiveUtilities)\r\n\r\n        addUtilities({\r\n            '.transform-3d-none': { transform: 'none' },\r\n            // '.transform-3d': {\r\n            //     '@defaults transform': {},\r\n            //     transform: 'var(--tw-transform)',\r\n            // }\r\n        })\r\n\r\n        const rotateXUtilities = map(theme('rotate3d'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-rotate-x${key}`)}`\r\n            } else {\r\n                className = `.${e(`rotate-x-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-rotate-x': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(rotateXUtilities)\r\n\r\n        const rotateYUtilities = map(theme('rotate3d'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-rotate-y${key}`)}`\r\n            } else {\r\n                className = `.${e(`rotate-y-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-rotate-y': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(rotateYUtilities)\r\n\r\n        const rotateZUtilities = map(theme('rotate3d'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-rotate-z${key}`)}`\r\n            } else {\r\n                className = `.${e(`rotate-z-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-rotate-z': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(rotateZUtilities)\r\n\r\n\r\n        const translateXUtilities = map(theme('translate'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-translate-x${key}`)}`\r\n            } else {\r\n                className = `.${e(`translate-x-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-translate-x': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(translateXUtilities)\r\n\r\n        const translateYUtilities = map(theme('translate'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-translate-y${key}`)}`\r\n            } else {\r\n                className = `.${e(`translate-y-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-translate-y': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(translateYUtilities)\r\n\r\n        const translateZUtilities = map(theme('translate'), (value, key) => {\r\n            let className;\r\n            if (key.startsWith('-')) {\r\n                className = `.${e(`-translate-z${key}`)}`\r\n            } else {\r\n                className = `.${e(`translate-z-${key}`)}`\r\n            }\r\n            return {\r\n                [className]: {\r\n                    '--tw-translate-z': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(translateZUtilities)\r\n\r\n        const scaleXUtilities = map(theme('scale'), (value, key) => {\r\n            return {\r\n                [`.${e(`scale-x-${key}`)}`]: {\r\n                    '--tw-scale-x': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(scaleXUtilities)\r\n\r\n        const scaleYUtilities = map(theme('scale'), (value, key) => {\r\n            return {\r\n                [`.${e(`scale-y-${key}`)}`]: {\r\n                    '--tw-scale-y': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(scaleYUtilities)\r\n\r\n        const scaleZUtilities = map(theme('scale'), (value, key) => {\r\n            return {\r\n                [`.${e(`scale-z-${key}`)}`]: {\r\n                    '--tw-scale-z': value,\r\n                    transform: 'var(--tw-transform)'\r\n                }\r\n            }\r\n        })\r\n\r\n        addUtilities(scaleZUtilities)\r\n\r\n    }\r\n}, {\r\n    theme: {\r\n        perspectiveValues: {\r\n            'none': 'none',\r\n            1: '100px',\r\n            2: '200px',\r\n            3: '300px',\r\n            4: '600px',\r\n            5: '500px',\r\n            6: '600px',\r\n            7: '700px',\r\n            8: '800px',\r\n            9: '900px',\r\n            10: '1000px',\r\n            '25vw': '25vw',\r\n            '50vw': '50vw',\r\n            '75w': '75vw',\r\n            '100vw': '100vw',\r\n        },\r\n        translate3d: (theme, { negative }) => ({\r\n            ...theme('spacing'),\r\n            ...negative(theme('spacing'))\r\n        }),\r\n        rotate3d: (theme) => ({\r\n            ...theme('rotate'),\r\n            ...{\r\n                '-60': '-60deg',\r\n                '-50': '-50deg',\r\n                '-40': '-40deg',\r\n                '-35': '-35deg',\r\n                '-30': '-30deg',\r\n                '-25': '-25deg',\r\n                '-20': '-20deg',\r\n                '-15': '-15deg',\r\n                '-10': '-10deg',\r\n                10: '10deg',\r\n                15: '15deg',\r\n                20: '20deg',\r\n                25: '25deg',\r\n                30: '30deg',\r\n                35: '35deg',\r\n                40: '40deg',\r\n                50: '50deg',\r\n                60: '60deg',\r\n            }\r\n        }),\r\n    }\r\n})\r\n\r\nmodule.exports = perspectivePlugin"],"names":["map","require","perspectivePlugin","plugin","addUtilities","addBase","theme","e","config","join","value","key","perspective","transform","startsWith","perspectiveValues","none","translate3d","negative","rotate3d","module","exports"],"mappings":"4RAAA,IAAMA,EAAMC,QAAQ,cAGdC,EAFSD,QAAQ,qBAEGE,CAAO,gBAAoBC,IAAAA,aAAcC,IAAAA,QAASC,IAAAA,MAAOC,IAAAA,EAEzD,QAAlBC,IAFqCA,QAE9B,UACPH,EAAQ,CACJ,uBAAwB,CACpB,mBAAoB,IACpB,mBAAoB,IACpB,mBAAoB,IACpB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,IACjB,cAAe,IACf,cAAe,IACf,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAEhB,iBAAkB,CACd,oCACA,oCACA,sFACA,oCAEA,0BACA,0BACA,oEACFI,KAAK,QAIfL,EAAa,CACT,wBAAyB,CACrB,kBAAmB,QAEvB,sBAAuB,CACnB,kBAAmB,iBAI3BA,EAAa,CACT,oBAAqB,CACjB,sBAAuB,WAE3B,mBAAoB,CAChB,sBAAuB,YAY/BA,EARmCJ,EAAIM,EAAM,mBAAoB,SAACI,EAAOC,SACrE,iBACSJ,wBAAwBI,IAAW,CACpC,qBAAsBD,QAelCN,EAR6BJ,EAAIM,EAAM,qBAAsB,SAACI,EAAOC,SACjE,iBACSJ,iBAAiBI,IAAW,CAC7BC,YAAeF,QAO3BN,EAAa,CACT,qBAAsB,CAAES,UAAW,UAsBvCT,EAfyBJ,EAAIM,EAAM,YAAa,SAACI,EAAOC,SAOpD,aALIA,EAAIG,WAAW,SACCP,cAAcI,OAEdJ,cAAcI,IAGjB,CACT,gBAAiBD,EACjBG,UAAW,4BAsBvBT,EAfyBJ,EAAIM,EAAM,YAAa,SAACI,EAAOC,SAOpD,aALIA,EAAIG,WAAW,SACCP,cAAcI,OAEdJ,cAAcI,IAGjB,CACT,gBAAiBD,EACjBG,UAAW,4BAsBvBT,EAfyBJ,EAAIM,EAAM,YAAa,SAACI,EAAOC,SAOpD,aALIA,EAAIG,WAAW,SACCP,cAAcI,OAEdJ,cAAcI,IAGjB,CACT,gBAAiBD,EACjBG,UAAW,4BAuBvBT,EAf4BJ,EAAIM,EAAM,aAAc,SAACI,EAAOC,SAOxD,aALIA,EAAIG,WAAW,SACCP,iBAAiBI,OAEjBJ,iBAAiBI,IAGpB,CACT,mBAAoBD,EACpBG,UAAW,4BAsBvBT,EAf4BJ,EAAIM,EAAM,aAAc,SAACI,EAAOC,SAOxD,aALIA,EAAIG,WAAW,SACCP,iBAAiBI,OAEjBJ,iBAAiBI,IAGpB,CACT,mBAAoBD,EACpBG,UAAW,4BAsBvBT,EAf4BJ,EAAIM,EAAM,aAAc,SAACI,EAAOC,SAOxD,aALIA,EAAIG,WAAW,SACCP,iBAAiBI,OAEjBJ,iBAAiBI,IAGpB,CACT,mBAAoBD,EACpBG,UAAW,4BAgBvBT,EATwBJ,EAAIM,EAAM,SAAU,SAACI,EAAOC,SAChD,iBACSJ,aAAaI,IAAW,CACzB,eAAgBD,EAChBG,UAAW,4BAgBvBT,EATwBJ,EAAIM,EAAM,SAAU,SAACI,EAAOC,SAChD,iBACSJ,aAAaI,IAAW,CACzB,eAAgBD,EAChBG,UAAW,4BAgBvBT,EATwBJ,EAAIM,EAAM,SAAU,SAACI,EAAOC,SAChD,iBACSJ,aAAaI,IAAW,CACzB,eAAgBD,EAChBG,UAAW,8BAQ5B,CACCP,MAAO,CACHS,kBAAmB,CACfC,KAAQ,OACR,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,GAAI,SACJ,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,QAAS,SAEbC,YAAa,SAACX,SAASY,IAAAA,qBAChBZ,EAAM,WACNY,EAASZ,EAAM,cAEtBa,SAAU,SAACb,eACJA,EAAM,UACN,CACC,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,cAMpBc,OAAOC,QAAUnB"}